<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:My="clr-namespace:MyWLUi.Controls"
    xmlns:MyConvert="clr-namespace:MyWLUi.Converts">
    <MyConvert:StringIsEmptyConverter x:Key="StringIsEmptyConverter" />

    <!--  三角形填充颜色  -->
    <PathGeometry x:Key="Arrow.Down" Figures="M0.5,0.764294L1.09437,0.17627 5,4.04022 8.90563,0.17627 9.5,0.764294 5,5.21627 0.5,0.764294z" />

    <!--#region ComboBoxStyle基样式-->
    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="ShadowBorder"
                Grid.ColumnSpan="2"
                Background="#FFFFFF"
                BorderThickness="0"
                CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=(My:ElementExten.CornerRadius)}"
                SnapsToDevicePixels="True"
                UseLayoutRounding="True">
                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="5"
                        Opacity="0.2"
                        ShadowDepth="0"
                        Color="Transparent" />
                </Border.Effect>
            </Border>

            <Border
                Name="Border"
                Grid.ColumnSpan="2"
                Background="{DynamicResource Common_Color}"
                BorderBrush="{DynamicResource CommonBorder_Color}"
                BorderThickness="1,1,1,1"
                CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=(My:ElementExten.CornerRadius)}"
                SnapsToDevicePixels="True"
                UseLayoutRounding="True" />

            <Border
                Name="ButtonBorder"
                Grid.Column="1"
                Margin="3,3,3,3"
                Padding="5,0,12,0"
                Background="{DynamicResource Common_Color}"
                CornerRadius="{Binding CornerRadius, ElementName=Border}">
                <Path
                    Name="Arrow"
                    Grid.Column="1"
                    Width="9"
                    Height="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{StaticResource Arrow.Down}"
                    Fill="{DynamicResource Triangle_Fill}"
                    RenderTransformOrigin="0.5,0.5"
                    SnapsToDevicePixels="True"
                    UseLayoutRounding="True">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Arrow"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                To="180"
                                Duration="0:0:0.2" />
                            <ColorAnimation
                                Storyboard.TargetName="ShadowBorder"
                                Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)"
                                To="Brown"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Arrow"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                To="0"
                                Duration="0:0:0.2" />
                            <ColorAnimation
                                Storyboard.TargetName="ShadowBorder"
                                Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)"
                                To="Transparent"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True" />
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>

            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="#999" />
                <Setter TargetName="Arrow" Property="Stroke" Value="#999" />
                <Setter TargetName="Border" Property="Opacity" Value="0.56" />
                <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.56" />
                <Setter TargetName="Arrow" Property="StrokeThickness" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true"
                        UseLayoutRounding="True">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#386BD7" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#386BD7" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="Foreground" Value="{DynamicResource Comon_Font_Color}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="12,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard_Open">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.9" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard_Close">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="{TemplateBinding Width}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="1">
                            <ToggleButton
                                x:Name="ToggleButton"
                                ClickMode="Press"
                                Focusable="False"
                                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Template="{StaticResource ComboBoxToggleButtonTemplate}" />
                            <ContentPresenter
                                Name="ContentSite"
                                Margin="5,3,25,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                IsHitTestVisible="False" />
                            <TextBlock
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontFamily="PingFang SC"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{DynamicResource Warter_Color}"
                                IsHitTestVisible="False"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(My:ElementExten.Watermark)}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>


                            <!--  Popup showing items  -->
                            <Popup
                                Name="Popup"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                AllowsTransparency="True"
                                HorizontalOffset="0"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                VerticalOffset="1">
                                <Grid
                                    Name="DropDown"
                                    Width="{TemplateBinding FrameworkElement.ActualWidth}"
                                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                    Margin="10,0,10,10"
                                    RenderTransformOrigin="0.5,0"
                                    SnapsToDevicePixels="True">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Grid.RenderTransform>


                                    <Border
                                        Name="DropDownBorder"
                                        Background="{DynamicResource Common_Color}"
                                        BorderBrush="{DynamicResource CommonBorder_Color}"
                                        BorderThickness="1"
                                        CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(My:ElementExten.CornerRadius)}"
                                        SnapsToDevicePixels="True"
                                        UseLayoutRounding="True" />

                                    <ScrollViewer
                                        Margin="0,3,0,0"
                                        SnapsToDevicePixels="True"
                                        Style="{DynamicResource My_ScrollViewer}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard_Open_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard_Open_BeginStoryboard" Storyboard="{StaticResource Storyboard_Open}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="False">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard_Close_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard_Close_BeginStoryboard" Storyboard="{StaticResource Storyboard_Close}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False" />
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="#888" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                            <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style BasedOn="{StaticResource MyComboBoxStyle}" TargetType="{x:Type ComboBox}" />
</ResourceDictionary>