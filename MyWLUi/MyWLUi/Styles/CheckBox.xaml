<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:My="clr-namespace:MyWLUi.Controls"
    xmlns:MyEvent="clr-namespace:MyWLUi.Args">


    <Style x:Key="MyCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Style.Resources>
            <ControlTemplate x:Key="SquareTemplate" TargetType="{x:Type CheckBox}">
                <Grid
                    x:Name="templateRoot"
                    Background="Transparent"
                    SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border
                        x:Name="checkBoxBorder"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <Grid x:Name="markGrid">
                            <Border
                                x:Name="borderMark"
                                Background="{DynamicResource CalendarItemButtonSelect}"
                                CornerRadius="1"
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True" />
                            <Path
                                x:Name="optionMark"
                                Width="12"
                                Height="{Binding Width, RelativeSource={RelativeSource Self}}"
                                Margin="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M329.625346 860.782661 17.275455 548.433794 74.584696 491.124554 329.625346 746.165204 949.415304 126.374222 1006.724545 183.683463Z"
                                Fill="{DynamicResource Common_Color}"
                                RenderTransformOrigin="0.5,0.5"
                                Stretch="Uniform">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>

                            <Rectangle
                                x:Name="indeterminateMark"
                                Margin="2"
                                Fill="{DynamicResource Common_Color}"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Border>
                    <ContentPresenter
                        x:Name="contentPresenter"
                        Grid.Column="1"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="False"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="optionMark"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                        From="0.2"
                                        To="1"
                                        Duration="0:0:0.2" />

                                    <DoubleAnimation
                                        Storyboard.TargetName="optionMark"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                        From="0.2"
                                        To="1"
                                        Duration="0:0:0.2" />

                                    <ColorAnimation
                                        Storyboard.TargetName="borderMark"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        From="Transparent"
                                        To="{DynamicResource IsChecked.Fill}"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.2" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.2" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimation
                                        Storyboard.TargetName="borderMark"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        From="Transparent"
                                        To="Transparent"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Indeterminate">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indeterminateMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indeterminateMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasContent" Value="true">
                        <Setter Property="Padding" Value="4,0,0,0" />
                    </Trigger>

                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Cursor" Value="No" />

                        <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource Common_DisabledColor}" />
                        <Setter Property="Foreground" Value="{DynamicResource Common_DisabledColor}" />
                    </Trigger>

                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                        <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                        <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource Common_Color}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="false">
                        <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                        <Setter TargetName="borderMark" Property="Opacity" Value="0" />
                        <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="EllipseTemplate" TargetType="{x:Type CheckBox}">
                <Grid
                    x:Name="templateRoot"
                    Background="Transparent"
                    SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border
                        x:Name="borderMark"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="100">
                        <Path
                            x:Name="optionMark"
                            Width="12"
                            Height="{Binding Width, RelativeSource={RelativeSource Self}}"
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M329.625346 860.782661 17.275455 548.433794 74.584696 491.124554 329.625346 746.165204 949.415304 126.374222 1006.724545 183.683463Z"
                            Fill="{DynamicResource Common_Color}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ContentPresenter
                        x:Name="contentPresenter"
                        Grid.Column="1"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="False"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <VisualStateManager.VisualStateGroups>

                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="optionMark"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                        From="0.2"
                                        To="1"
                                        Duration="0:0:0.2" />

                                    <DoubleAnimation
                                        Storyboard.TargetName="optionMark"
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                        From="0.2"
                                        To="1"
                                        Duration="0:0:0.2" />

                                    <ColorAnimation
                                        Storyboard.TargetName="borderMark"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        From="Transparent"
                                        To="#3399FF"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.2" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.2" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimation
                                        Storyboard.TargetName="borderMark"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        From="#3399FF"
                                        To="Transparent"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Indeterminate">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indeterminateMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indeterminateMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasContent" Value="true">
                        <Setter Property="Padding" Value="4,0,0,0" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="borderMark" Property="BorderBrush" Value="{DynamicResource CalendarItemButtonSelect}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Cursor" Value="No" />
                        <Setter TargetName="borderMark" Property="BorderBrush" Value="{DynamicResource Common_DisabledColor}" />
                        <Setter Property="Foreground" Value="{DynamicResource Common_DisabledColor}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                        <Setter TargetName="borderMark" Property="BorderBrush" Value="{DynamicResource CalendarItemButtonSelect}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                        <Setter TargetName="borderMark" Property="Opacity" Value="0" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="SwitchTemplate" TargetType="{x:Type CheckBox}">
                <Border
                    x:Name="switchBorder"
                    Width="60"
                    Height="30"
                    Background="#FF9E9E9E"
                    CornerRadius="15">
                    <Ellipse
                        x:Name="switchThumb"
                        Width="26"
                        Height="26"
                        Margin="2"
                        HorizontalAlignment="Left"
                        Fill="White">
                        <Ellipse.RenderTransform>
                            <TranslateTransform x:Name="thumbTransform" X="0" />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="switchBorder"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#FF4CAF50"
                                        Duration="0:0:0.2" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="thumbTransform"
                                        Storyboard.TargetProperty="X"
                                        To="30"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="switchBorder"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#FF9E9E9E"
                                        Duration="0:0:0.2" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="thumbTransform"
                                        Storyboard.TargetProperty="X"
                                        To="0"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>


        </Style.Resources>





        <Style.Triggers>
            <Trigger Property="My:ElementExten.CheckBoxType" Value="Square">
                <Setter Property="Background" Value="{DynamicResource Common_Color}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonBorder_Color_Second}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="Template" Value="{DynamicResource SquareTemplate}" />
            </Trigger>

            <Trigger Property="My:ElementExten.CheckBoxType" Value="Ellipse">
                <Setter Property="Background" Value="{DynamicResource Common_Color}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonBorder_Color_Second}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="Template" Value="{DynamicResource EllipseTemplate}" />
            </Trigger>

            <Trigger Property="My:ElementExten.CheckBoxType" Value="Switch">
                <Setter Property="Background" Value="{DynamicResource Common_Color}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonBorder_Color_Second}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="Template" Value="{DynamicResource SwitchTemplate}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.76" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource MyCheckBoxStyle}" TargetType="{x:Type CheckBox}" />

</ResourceDictionary>